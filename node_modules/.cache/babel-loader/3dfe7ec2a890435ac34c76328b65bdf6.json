{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ian\\\\Documents\\\\create-react-app\\\\my-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport './Person/person.css';\nimport './TimeInputs/timeinputs.css';\nimport './Total/total.css';\nimport './WorkItem/workitem.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport Person from './Person/person';\nimport TimeInput from './TimeInputs/timesinputs';\nimport Total from './Total/total';\nimport WorkItem from './WorkItem/workitem';\nimport DatePicker from \"react-datepicker\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.date = new Date();\n    this.state = {\n      persons: [{\n        id: '1',\n        name: 'Maximilian',\n        age: 28\n      }, {\n        id: '2',\n        name: 'Manu',\n        age: 29\n      }, {\n        id: '3',\n        name: 'Stephanie',\n        age: 30\n      }],\n      otherState: 'some other values',\n      showPersons: false,\n      timeInputs: [{\n        id: '1',\n        name: 'Starting time',\n        hours: '00',\n        minutes: '00'\n      }, {\n        id: '2',\n        name: 'Finishing time',\n        hours: '00',\n        minutes: '00'\n      }, {\n        id: '3',\n        name: 'Starting lunch break',\n        hours: '00',\n        minutes: '00'\n      }, {\n        id: '4',\n        name: 'Finishing lunch break',\n        hours: '00',\n        minutes: '00'\n      }],\n      totalCards: [{\n        id: '1',\n        value: 'Total worked:',\n        color: '#85aded'\n      }, {\n        id: '2',\n        value: 'Number of workdays:',\n        color: '#b00538'\n      }, {\n        id: '3',\n        value: 'Total lunchbreaks: ',\n        color: '#b3b00e'\n      }],\n      workItems: [{\n        id: '1',\n        date: '10/10/2020',\n        workedFrom: '8 AM',\n        workedTo: '7 PM',\n        totalWorked: '9 hours',\n        lunchBreakFrom: '9 AM',\n        lunchBreakTo: '9:30 AM',\n        totalLunchBreak: '30 minutes'\n      }],\n      date: this.date\n    };\n\n    this.deletePersonHandler = index => {\n      //moze drugi nacin je ES6. linije kopiraju state u const\n      //const persons = this.state.persons.slice();\n      const persons = [...this.state.persons];\n      persons.splice(index, 1);\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.nameChangedHandler = (event, id) => {\n      const personIndex = this.state.persons.findIndex(p => {\n        return p.id === id;\n      });\n      const person = { ...this.state.persons[personIndex]\n      };\n      person.name = event.target.value;\n      const persons = [...this.state.persons];\n      persons[personIndex] = person;\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.dateChangedHandler = newDate => {\n      this.setState({\n        date: newDate\n      });\n    };\n\n    this.togglePersonsHandler = () => {\n      const doesShow = this.state.showPersons;\n      this.setState({\n        showPersons: true\n      });\n    };\n\n    this.submitHandler = () => {\n      const date = this.state.date;\n      const timeInputs = [...this.state.timeInputs];\n      const workItems = [...this.state.workItems];\n      let maxid = 0;\n      maxid = maxid + 1;\n      workItems.map(function (workItem) {\n        if (parseInt(workItem.id) > maxid) maxid = workItem.id;\n      });\n      const arrivingTime = timeInputs[0].hours + \":\" + timeInputs[1].minutes;\n      const leavingTime = timeInputs[1].hours + \":\" + timeInputs[1].minutes;\n      const luchBreakStarting = timeInputs[2].hours + \":\" + timeInputs[2].minutes;\n      const lunchBreakFinishing = timeInputs[3].hours + \":\" + timeInputs[3].minutes;\n      let totalWorked = new Date();\n      var startingTime = new Date(2000, 0, 1, timeInputs[0].hours, timeInputs[0].minutes, 0);\n      var finishingTime = new Date(2000, 0, 1, timeInputs[1].hours, timeInputs[1].minutes, 0);\n\n      if (finishingTime < startingTime) {\n        finishingTime.setDate(finishingTime.getDate() + 1);\n      }\n\n      var diff = finishingTime - startingTime;\n      var msec = diff;\n      var hh = Math.floor(msec / 1000 / 60 / 60);\n      msec -= hh * 1000 * 60 * 60;\n      var mm = Math.floor(msec / 1000 / 60);\n      msec -= mm * 1000 * 60;\n      var ss = Math.floor(msec / 1000);\n      msec -= ss * 1000;\n      workItems.push({\n        id: maxid,\n        date: date,\n        workedFrom: arivingTime,\n        workedTo: leavingTime,\n        totalWorked: '9 hours',\n        lunchBreakFrom: '9 AM',\n        lunchBreakTo: '9:30 AM',\n        totalLunchBreak: '30 minutes'\n      });\n      console.log(date);\n      console.log(hh);\n      console.log(mm);\n    };\n\n    this.timeInputChangeHandler = (event, id) => {\n      const timeInputs = [...this.state.timeInputs];\n      const particularInputIndex = timeInputs.findIndex(t => {\n        return t.id === id;\n      });\n      const input = event.target.value;\n      console.log(event.target.className);\n\n      if (event.target.className.includes(\"hours\")) {\n        timeInputs[particularInputIndex].hours = input;\n      }\n\n      if (event.target.className.includes(\"minutes\")) {\n        timeInputs[particularInputIndex].minutes = input;\n      }\n\n      this.setState({\n        timeInputs: timeInputs\n      });\n      console.log(this.state.timeInputs);\n    };\n  }\n\n  render() {\n    const style = {\n      backgroundColor: 'white',\n      font: 'inherit',\n      border: '1px solid blue',\n      padding: '8px',\n      cursor: 'pointer'\n    };\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }\n      }, this.state.persons.map((person, index) => {\n        return /*#__PURE__*/React.createElement(Person, {\n          click: this.deletePersonHandler.bind(this, index),\n          name: person.name,\n          age: person.age,\n          key: person.id,\n          changed: event => this.nameChangedHandler(event, person.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 18\n          }\n        });\n      }));\n    }\n\n    let timeInputs = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }\n    }, this.state.timeInputs.map((input, index) => {\n      return /*#__PURE__*/React.createElement(TimeInput, {\n        key: input.id,\n        name: input.name,\n        changed: event => this.timeInputChangeHandler(event, input.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 20\n        }\n      });\n    }));\n    let cardsTotal = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 7\n      }\n    }, this.state.totalCards.map((card, index) => {\n      return /*#__PURE__*/React.createElement(Total, {\n        key: card.id,\n        name: card.value,\n        color: card.color,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 20\n        }\n      });\n    }));\n    let workItems = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 7\n      }\n    }, this.state.workItems.map((item, index) => {\n      return /*#__PURE__*/React.createElement(WorkItem, {\n        key: item.id,\n        date: item.date,\n        workedFrom: item.workedFrom,\n        workedTo: item.workedTo,\n        totalWorked: item.totalWorked,\n        lunchBreakFrom: item.lunchBreakFrom,\n        lunchBreakTo: item.lunchBreakTo,\n        totalLunchBreak: item.totalLunchBreak,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 18\n        }\n      });\n    }));\n    let datePicker = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      selected: this.state.date,\n      onChange: date => this.dateChangedHandler(date),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 10\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }\n    }, \"working p\"), /*#__PURE__*/React.createElement(\"button\", {\n      style: style,\n      onClick: this.togglePersonsHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }\n    }, \"Hide/unhide\"), persons, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"datepicker-container-outer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"datepicker-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }\n    }, datePicker)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-container-outer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    }, timeInputs, /*#__PURE__*/React.createElement(\"button\", {\n      class: \"inputs-submit\",\n      onClick: event => this.submitHandler(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }\n    }, \"Submit work\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"total-container-outer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"total-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }\n    }, cardsTotal))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"work-items-container-outer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"work-items-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }\n    }, workItems)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Ian/Documents/create-react-app/my-app/src/App.js"],"names":["React","Component","Person","TimeInput","Total","WorkItem","DatePicker","App","date","Date","state","persons","id","name","age","otherState","showPersons","timeInputs","hours","minutes","totalCards","value","color","workItems","workedFrom","workedTo","totalWorked","lunchBreakFrom","lunchBreakTo","totalLunchBreak","deletePersonHandler","index","splice","setState","nameChangedHandler","event","personIndex","findIndex","p","person","target","dateChangedHandler","newDate","togglePersonsHandler","doesShow","submitHandler","maxid","map","workItem","parseInt","arrivingTime","leavingTime","luchBreakStarting","lunchBreakFinishing","startingTime","finishingTime","setDate","getDate","diff","msec","hh","Math","floor","mm","ss","push","arivingTime","console","log","timeInputChangeHandler","particularInputIndex","t","input","className","includes","render","style","backgroundColor","font","border","padding","cursor","bind","cardsTotal","card","item","datePicker"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport './Person/person.css'\nimport './TimeInputs/timeinputs.css'\nimport './Total/total.css'\nimport './WorkItem/workitem.css'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport Person from './Person/person';\nimport TimeInput from './TimeInputs/timesinputs'\nimport Total from './Total/total'\nimport WorkItem from './WorkItem/workitem'\nimport DatePicker from \"react-datepicker\"\n\n\nclass App extends Component{\n  date = new Date();\n  state = {\n    persons: [\n    { id: '1', name: 'Maximilian', age: 28 },\n    { id: '2', name: 'Manu', age: 29 },\n    { id: '3', name: 'Stephanie', age: 30 }\n    ],\n    otherState: 'some other values',\n    showPersons: false,\n    timeInputs: [\n      { id: '1', name: 'Starting time', hours:'00', minutes:'00' },\n      { id: '2', name: 'Finishing time',hours:'00', minutes:'00' },\n      { id: '3', name: 'Starting lunch break', hours:'00', minutes:'00' },\n      { id: '4', name: 'Finishing lunch break', hours:'00', minutes:'00' }\n    ],\n    totalCards: [\n      {id: '1', value: 'Total worked:', color: '#85aded'},\n      {id: '2', value: 'Number of workdays:', color: '#b00538'},\n      {id: '3', value: 'Total lunchbreaks: ', color: '#b3b00e'}\n    ],\n    workItems: [\n      {id: '1', date: '10/10/2020', workedFrom: '8 AM', workedTo: '7 PM', totalWorked: '9 hours', lunchBreakFrom: '9 AM', lunchBreakTo: '9:30 AM', totalLunchBreak: '30 minutes'}\n    ],\n    date: this.date\n  }\n\n  deletePersonHandler = (index) =>{\n    //moze drugi nacin je ES6. linije kopiraju state u const\n    //const persons = this.state.persons.slice();\n    const persons = [...this.state.persons];\n    persons.splice(index, 1);\n    this.setState({persons:persons})\n  }\n\n  nameChangedHandler = (event, id) =>{\n    const personIndex = this.state.persons.findIndex(p => {\n      return p.id === id;\n    });\n\n    const person = {\n      ...this.state.persons[personIndex]\n    };\n    person.name = event.target.value;\n\n    const persons = [...this.state.persons];\n    persons[personIndex] = person;\n    this.setState({persons:persons});\n  }\n\n  dateChangedHandler = (newDate) =>{\n    this.setState({date: newDate});\n  }\n\n  togglePersonsHandler = () =>{\n    const doesShow = this.state.showPersons;\n    this.setState({showPersons: true});\n  }\n\n  submitHandler = () =>{\n    const date = this.state.date;\n    const timeInputs = [...this.state.timeInputs];\n    const workItems = [...this.state.workItems];\n    let maxid = 0;\n    maxid = maxid + 1;\n    workItems.map(function(workItem){     \n      if (parseInt(workItem.id) > maxid) maxid = workItem.id;    \n    });\n    const arrivingTime = timeInputs[0].hours + \":\" + timeInputs[1].minutes;\n    const leavingTime = timeInputs[1].hours + \":\" + timeInputs[1].minutes;\n    const luchBreakStarting = timeInputs[2].hours + \":\" + timeInputs[2].minutes;\n    const lunchBreakFinishing = timeInputs[3].hours + \":\" + timeInputs[3].minutes;\n    let totalWorked = new Date();\n    var startingTime = new Date(2000, 0, 1, timeInputs[0].hours, timeInputs[0].minutes, 0);\n    var finishingTime = new Date(2000, 0, 1, timeInputs[1].hours, timeInputs[1].minutes,0);\n    if(finishingTime<startingTime){\n      finishingTime.setDate(finishingTime.getDate() + 1);\n    }\n    var diff = finishingTime - startingTime;\n    var msec = diff;\n    var hh = Math.floor(msec / 1000 / 60 / 60);\n    msec -= hh * 1000 * 60 * 60;\n    var mm = Math.floor(msec / 1000 / 60);\n    msec -= mm * 1000 * 60;\n    var ss = Math.floor(msec / 1000);\n    msec -= ss * 1000;\n    workItems.push({id: maxid, date: date, workedFrom: arivingTime, workedTo: leavingTime, totalWorked: '9 hours', lunchBreakFrom: '9 AM', lunchBreakTo: '9:30 AM', totalLunchBreak: '30 minutes'});\n    console.log(date);\n    console.log(hh);\n    console.log(mm);\n  }\n\n  timeInputChangeHandler = (event, id) =>{\n    const timeInputs = [...this.state.timeInputs];\n    const particularInputIndex = timeInputs.findIndex(t => {\n      return t.id === id;\n    })\n    const input = event.target.value;\n    console.log(event.target.className);\n    if(event.target.className.includes(\"hours\")){\n      timeInputs[particularInputIndex].hours = input;\n    }\n    if(event.target.className.includes(\"minutes\")){\n      timeInputs[particularInputIndex].minutes = input;\n    }\n\n    this.setState({timeInputs: timeInputs})\n    console.log(this.state.timeInputs);\n  }\n\n  render(){\n\n    const style = {\n      backgroundColor: 'white',\n      font: 'inherit',\n      border: '1px solid blue',\n      padding: '8px',\n      cursor: 'pointer'\n    };\n\n    let persons = null;\n\n    if(this.state.showPersons){\n      persons = (\n        <div>\n        {this.state.persons.map((person,index) => {\n          return <Person \n          click={this.deletePersonHandler.bind(this, index)}\n          name={person.name}\n          age={person.age}\n          key={person.id}\n          changed={(event) => this.nameChangedHandler(event, person.id)}/> \n        })}\n      </div>)\n    }\n\n    let timeInputs = (\n      <div>\n        {\n          this.state.timeInputs.map((input, index) => {\n            return <TimeInput \n              key={input.id}\n              name={input.name}\n              changed={(event) => this.timeInputChangeHandler(event, input.id)}/>\n          })\n        }\n      </div>\n    )\n\n    let cardsTotal = (\n      <div>\n        {\n          this.state.totalCards.map((card, index) => {\n            return <Total \n              key={card.id}\n              name={card.value}\n              color={card.color}/>\n          })\n        }\n      </div>\n    )\n\n    let workItems = (\n      <div>\n      {\n        this.state.workItems.map((item, index) => {\n          return <WorkItem\n            key={item.id}\n            date={item.date}\n            workedFrom={item.workedFrom}\n            workedTo={item.workedTo}\n            totalWorked={item.totalWorked}\n            lunchBreakFrom={item.lunchBreakFrom}\n            lunchBreakTo={item.lunchBreakTo}\n            totalLunchBreak={item.totalLunchBreak}\n            />\n        })\n      }\n    </div>\n    )\n\n    let datePicker = (\n      <div>\n         <DatePicker selected={this.state.date}\n                    onChange={date => this.dateChangedHandler(date)} />\n      </div>\n    )\n\n    return (\n      <div className=\"App\">\n        <h1>Title</h1>\n        <p>working p</p>\n        <button\n          style={style}\n          onClick={this.togglePersonsHandler}>Hide/unhide</button>\n        {persons}\n        <div className=\"header-img\">\n        <div className=\"datepicker-container-outer\">\n          <div className=\"datepicker-container\">\n            {datePicker}\n          </div>\n        </div>\n        <div className=\"input-container-outer\">\n          <div className=\"input-container\">\n            {timeInputs}\n            <button class=\"inputs-submit\" onClick={(event) => this.submitHandler()}>Submit work</button>\n          </div>\n        </div>\n        <div className=\"total-container-outer\">\n          <div className=\"total-container\">{cardsTotal}</div></div>\n        </div>\n        <div className=\"work-items-container-outer\">\n          <div className=\"work-items-container\">\n            {workItems}\n          </div>\n        </div>\n      </div>\n      );\n    }\n  }\n  export default App;\n"]},"metadata":{},"sourceType":"module"}