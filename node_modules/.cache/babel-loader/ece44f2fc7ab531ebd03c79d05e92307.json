{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ian\\\\Documents\\\\create-react-app\\\\my-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport './Person/person.css';\nimport './TimeInputs/timeinputs.css';\nimport './Total/total.css';\nimport './WorkItem/workitem.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport Person from './Person/person';\nimport TimeInput from './TimeInputs/timesinputs';\nimport Total from './Total/total';\nimport WorkItem from './WorkItem/workitem';\nimport DatePicker from \"react-datepicker\";\nimport Firebase from './Firebase';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.date = new Date();\n\n    this.deletePersonHandler = index => {\n      //moze drugi nacin je ES6. linije kopiraju state u const\n      //const persons = this.state.persons.slice();\n      const persons = [...this.state.persons];\n      persons.splice(index, 1);\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.nameChangedHandler = (event, id) => {\n      const personIndex = this.state.persons.findIndex(p => {\n        return p.id === id;\n      });\n      const person = { ...this.state.persons[personIndex]\n      };\n      person.name = event.target.value;\n      const persons = [...this.state.persons];\n      persons[personIndex] = person;\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.dateChangedHandler = newDate => {\n      this.setState({\n        date: newDate\n      });\n    };\n\n    this.togglePersonsHandler = () => {\n      const doesShow = this.state.showPersons;\n      this.setState({\n        showPersons: true\n      });\n    };\n\n    this.submitHandler = () => {\n      const d = this.state.date;\n      const dd = String(d.getDate()).padStart(2, '0');\n      const mm = String(d.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n      const yyyy = d.getFullYear();\n      const selectedDate = dd + \".\" + mm + \".\" + yyyy;\n      const timeInputs = [...this.state.timeInputs];\n      const workItems = [...this.state.workItems];\n      let maxid = 0;\n      workItems.map(function (workItem) {\n        if (parseInt(workItem.id) > maxid) maxid = workItem.id;\n      });\n      maxid = maxid + 1;\n      const arrivingTime = timeInputs[0].hours + \":\" + timeInputs[0].minutes;\n      const leavingTime = timeInputs[1].hours + \":\" + timeInputs[1].minutes;\n      const lunchBreakStarting = timeInputs[2].hours + \":\" + timeInputs[2].minutes;\n      const lunchBreakFinishing = timeInputs[3].hours + \":\" + timeInputs[3].minutes;\n      const totalWorkedHours = this.getHoursDifference(timeInputs[0], timeInputs[1]);\n      const totalWorkedMinutes = this.getMinutesDifference(timeInputs[0], timeInputs[1]);\n      const totalLunchBreakHours = this.getHoursDifference(timeInputs[2], timeInputs[3]);\n      const totalLunchBreakMinutes = this.getMinutesDifference(timeInputs[2], timeInputs[3]);\n      const totalWorked = totalWorkedHours + \" hours \" + totalWorkedMinutes + \" minutes\";\n      const totalLunchBreak = totalLunchBreakHours + \" hours \" + totalLunchBreakMinutes + \" minutes\";\n      workItems.push({\n        id: maxid,\n        date: selectedDate,\n        workedFrom: arrivingTime,\n        workedTo: leavingTime,\n        totalWorkedHours: totalWorkedHours,\n        totalWorkedMinutes: totalWorkedMinutes,\n        lunchBreakFrom: lunchBreakStarting,\n        lunchBreakTo: lunchBreakFinishing,\n        totalLunchBreakHours: totalLunchBreakHours,\n        totalLunchBreakMinutes: totalLunchBreakMinutes,\n        totalWorked: totalWorked,\n        totalLunchBreak: totalLunchBreak\n      });\n      this.setState({\n        workItems: workItems\n      });\n      const workedHoursArray = workItems.map(function (workItem) {\n        return workItem.totalWorkedHours;\n      });\n      const workedMinutesArray = workItems.map(function (workItem) {\n        return workItem.totalWorkedMinutes;\n      });\n      const totalCardsWorked = this.getTotalTime(workedHoursArray, workedMinutesArray);\n      const lunchBreakHours = workItems.map(function (workItem) {\n        return workItem.totalLunchBreakHours;\n      });\n      const lunchBreakMinutes = workItems.map(function (workItem) {\n        return workItem.totalLunchBreakMinutes;\n      });\n      const totalCardsLunchBreak = this.getTotalTime(lunchBreakHours, lunchBreakMinutes);\n      const totalCards = [...this.state.totalCards];\n      totalCards[0].value = totalCardsWorked;\n      totalCards[1].value = workItems.length;\n      totalCards[2].value = totalCardsLunchBreak;\n      this.setState({\n        totalCards: totalCards\n      });\n      this.db.ref(\"workitems\").push({\n        id: maxid,\n        date: selectedDate,\n        workedFrom: arrivingTime,\n        workedTo: leavingTime,\n        totalWorkedHours: totalWorkedHours,\n        totalWorkedMinutes: totalWorkedMinutes,\n        lunchBreakFrom: lunchBreakStarting,\n        lunchBreakTo: lunchBreakFinishing,\n        totalLunchBreakHours: totalLunchBreakHours,\n        totalLunchBreakMinutes: totalLunchBreakMinutes,\n        totalWorked: totalWorked,\n        totalLunchBreak: totalLunchBreak\n      });\n    };\n\n    this.getTotalTime = (hoursArray, minutesArray) => {\n      let totalHours = hoursArray.reduce((a, b) => a + b, 0);\n      let totalMinutes = minutesArray.reduce((a, b) => a + b, 0);\n      var hours = totalMinutes / 60;\n      var rhours = Math.floor(totalMinutes / 60);\n      totalHours = totalHours + rhours;\n      var minutes = (hours - rhours) * 60;\n      var rMinutes = Math.round(minutes);\n      return totalHours + \"hours \" + rMinutes + \"minutes\";\n    };\n\n    this.getHoursDifference = (timeInput1, timeInput2) => {\n      let firstTime = new Date(2000, 0, 1, timeInput1.hours, timeInput1.minutes, 0);\n      let secondTIme = new Date(2000, 0, 1, timeInput2.hours, timeInput2.minutes, 0);\n\n      if (secondTIme < firstTime) {\n        secondTIme.setDate(secondTIme.getDate() + 1);\n      }\n\n      var diff = secondTIme - firstTime;\n      var msec = diff;\n      var hh = Math.floor(msec / 1000 / 60 / 60);\n      return hh;\n    };\n\n    this.getMinutesDifference = (timeInput1, timeInput2) => {\n      let firstTime = new Date(2000, 0, 1, timeInput1.hours, timeInput1.minutes, 0);\n      let secondTIme = new Date(2000, 0, 1, timeInput2.hours, timeInput2.minutes, 0);\n\n      if (secondTIme < firstTime) {\n        secondTIme.setDate(secondTIme.getDate() + 1);\n      }\n\n      var diff = secondTIme - firstTime;\n      var msec = diff;\n      var hh = Math.floor(msec / 1000 / 60 / 60);\n      msec -= hh * 1000 * 60 * 60;\n      var mm = Math.floor(msec / 1000 / 60);\n      return mm;\n    };\n\n    this.timeInputChangeHandler = (event, id) => {\n      const timeInputs = [...this.state.timeInputs];\n      const particularInputIndex = timeInputs.findIndex(t => {\n        return t.id === id;\n      });\n      const input = event.target.value;\n      console.log(event.target.className);\n\n      if (event.target.className.includes(\"hours\")) {\n        timeInputs[particularInputIndex].hours = input;\n      }\n\n      if (event.target.className.includes(\"minutes\")) {\n        timeInputs[particularInputIndex].minutes = input;\n      }\n\n      this.setState({\n        timeInputs: timeInputs\n      });\n    };\n\n    this.db = Firebase.database();\n    this.try = [];\n    this.state = {\n      persons: [{\n        id: '1',\n        name: 'Maximilian',\n        age: 28\n      }, {\n        id: '2',\n        name: 'Manu',\n        age: 29\n      }, {\n        id: '3',\n        name: 'Stephanie',\n        age: 30\n      }],\n      otherState: 'some other values',\n      showPersons: false,\n      timeInputs: [{\n        id: '1',\n        name: 'Starting time',\n        hours: '00',\n        minutes: '00'\n      }, {\n        id: '2',\n        name: 'Finishing time',\n        hours: '00',\n        minutes: '00'\n      }, {\n        id: '3',\n        name: 'Starting lunch break',\n        hours: '00',\n        minutes: '00'\n      }, {\n        id: '4',\n        name: 'Finishing lunch break',\n        hours: '00',\n        minutes: '00'\n      }],\n      totalCards: [{\n        id: '1',\n        heading: 'Total worked:',\n        color: '#85aded',\n        value: '0 hours 0 minutes'\n      }, {\n        id: '2',\n        heading: 'Number of workdays:',\n        color: '#b00538',\n        value: '0'\n      }, {\n        id: '3',\n        heading: 'Total lunchbreaks: ',\n        color: '#b3b00e',\n        value: '0 hours 0 minutes'\n      }],\n      workItems: [],\n      date: this.date\n    };\n  }\n\n  componentDidMount() {\n    let workItems = [...this.state.workItems];\n    const workItemsRef = this.db.ref(\"workitems\");\n    workItemsRef.once('value', function (snapshot) {\n      snapshot.forEach(function (_child) {\n        let childData = _child.val();\n      });\n    });\n  }\n\n  render() {\n    const style = {\n      backgroundColor: 'white',\n      font: 'inherit',\n      border: '1px solid blue',\n      padding: '8px',\n      cursor: 'pointer'\n    };\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }\n      }, this.state.persons.map((person, index) => {\n        return /*#__PURE__*/React.createElement(Person, {\n          click: this.deletePersonHandler.bind(this, index),\n          name: person.name,\n          age: person.age,\n          key: person.id,\n          changed: event => this.nameChangedHandler(event, person.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 18\n          }\n        });\n      }));\n    }\n\n    let timeInputs = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 7\n      }\n    }, this.state.timeInputs.map((input, index) => {\n      return /*#__PURE__*/React.createElement(TimeInput, {\n        key: input.id,\n        name: input.name,\n        changed: event => this.timeInputChangeHandler(event, input.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 20\n        }\n      });\n    }));\n    let cardsTotal = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 7\n      }\n    }, this.state.totalCards.map((card, index) => {\n      return /*#__PURE__*/React.createElement(Total, {\n        key: card.id,\n        heading: card.heading,\n        value: card.value,\n        color: card.color,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 20\n        }\n      });\n    }));\n    console.log(this.state.workItems);\n    let workItems = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 7\n      }\n    }, this.state.workItems.map((item, index) => {\n      return /*#__PURE__*/React.createElement(WorkItem, {\n        key: item.id,\n        date: item.date,\n        workedFrom: item.workedFrom,\n        workedTo: item.workedTo,\n        totalWorked: item.totalWorked,\n        lunchBreakFrom: item.lunchBreakFrom,\n        lunchBreakTo: item.lunchBreakTo,\n        totalLunchBreak: item.totalLunchBreak,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 18\n        }\n      });\n    }));\n    console.log(this.state.workItems);\n    let datePicker = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      selected: this.state.date,\n      onChange: date => this.dateChangedHandler(date),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 10\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }\n    }, \"working p\"), /*#__PURE__*/React.createElement(\"button\", {\n      style: style,\n      onClick: this.togglePersonsHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }\n    }, \"Hide/unhide\"), persons, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"datepicker-container-outer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"datepicker-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }\n    }, datePicker)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-container-outer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }\n    }, timeInputs, /*#__PURE__*/React.createElement(\"button\", {\n      class: \"inputs-submit\",\n      onClick: event => this.submitHandler(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 13\n      }\n    }, \"Submit work\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"total-container-outer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"total-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }\n    }, cardsTotal))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"work-items-container-outer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"work-items-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }\n    }, workItems)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Ian/Documents/create-react-app/my-app/src/App.js"],"names":["React","Component","Person","TimeInput","Total","WorkItem","DatePicker","Firebase","App","constructor","props","date","Date","deletePersonHandler","index","persons","state","splice","setState","nameChangedHandler","event","id","personIndex","findIndex","p","person","name","target","value","dateChangedHandler","newDate","togglePersonsHandler","doesShow","showPersons","submitHandler","d","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","selectedDate","timeInputs","workItems","maxid","map","workItem","parseInt","arrivingTime","hours","minutes","leavingTime","lunchBreakStarting","lunchBreakFinishing","totalWorkedHours","getHoursDifference","totalWorkedMinutes","getMinutesDifference","totalLunchBreakHours","totalLunchBreakMinutes","totalWorked","totalLunchBreak","push","workedFrom","workedTo","lunchBreakFrom","lunchBreakTo","workedHoursArray","workedMinutesArray","totalCardsWorked","getTotalTime","lunchBreakHours","lunchBreakMinutes","totalCardsLunchBreak","totalCards","length","db","ref","hoursArray","minutesArray","totalHours","reduce","a","b","totalMinutes","rhours","Math","floor","rMinutes","round","timeInput1","timeInput2","firstTime","secondTIme","setDate","diff","msec","hh","timeInputChangeHandler","particularInputIndex","t","input","console","log","className","includes","database","try","age","otherState","heading","color","componentDidMount","workItemsRef","once","snapshot","forEach","_child","childData","val","render","style","backgroundColor","font","border","padding","cursor","bind","cardsTotal","card","item","datePicker"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport './Person/person.css';\nimport './TimeInputs/timeinputs.css';\nimport './Total/total.css';\nimport './WorkItem/workitem.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport Person from './Person/person';\nimport TimeInput from './TimeInputs/timesinputs';\nimport Total from './Total/total';\nimport WorkItem from './WorkItem/workitem';\nimport DatePicker from \"react-datepicker\";\nimport Firebase from './Firebase';\n\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.db = Firebase.database();\n    this.try = [];\n    this.state = {\n    persons: [\n    { id: '1', name: 'Maximilian', age: 28 },\n    { id: '2', name: 'Manu', age: 29 },\n    { id: '3', name: 'Stephanie', age: 30 }\n    ],\n    otherState: 'some other values',\n    showPersons: false,\n    timeInputs: [\n      { id: '1', name: 'Starting time', hours:'00', minutes:'00' },\n      { id: '2', name: 'Finishing time',hours:'00', minutes:'00' },\n      { id: '3', name: 'Starting lunch break', hours:'00', minutes:'00' },\n      { id: '4', name: 'Finishing lunch break', hours:'00', minutes:'00' }\n    ],\n    totalCards: [\n      {id: '1', heading: 'Total worked:', color: '#85aded', value: '0 hours 0 minutes'},\n      {id: '2', heading: 'Number of workdays:', color: '#b00538', value: '0'},\n      {id: '3', heading: 'Total lunchbreaks: ', color: '#b3b00e', value: '0 hours 0 minutes'}\n    ],\n    workItems: [],\n    date: this.date\n  }\n  }\n  date = new Date();\n\ncomponentDidMount(){\n  let workItems = [...this.state.workItems];\n    const workItemsRef = this.db.ref(\"workitems\");\n    workItemsRef.once('value', function(snapshot){\n        snapshot.forEach(function(_child){\n          let childData = _child.val();\n        });\n    });\n  }\n\n  deletePersonHandler = (index) =>{\n    //moze drugi nacin je ES6. linije kopiraju state u const\n    //const persons = this.state.persons.slice();\n    const persons = [...this.state.persons];\n    persons.splice(index, 1);\n    this.setState({persons:persons})\n  }\n\n  nameChangedHandler = (event, id) =>{\n    const personIndex = this.state.persons.findIndex(p => {\n      return p.id === id;\n    });\n\n    const person = {\n      ...this.state.persons[personIndex]\n    };\n    person.name = event.target.value;\n\n    const persons = [...this.state.persons];\n    persons[personIndex] = person;\n    this.setState({persons:persons});\n  }\n\n  dateChangedHandler = (newDate) =>{\n    this.setState({date: newDate});\n  }\n\n  togglePersonsHandler = () =>{\n    const doesShow = this.state.showPersons;\n    this.setState({showPersons: true});\n  }\n\n  submitHandler = () =>{\n    const d = this.state.date;\n    const dd = String(d.getDate()).padStart(2, '0');\n    const mm = String(d.getMonth() + 1).padStart(2, '0'); //January is 0!\n    const yyyy = d.getFullYear();\n    const selectedDate = dd + \".\" + mm + \".\" + yyyy;\n    const timeInputs = [...this.state.timeInputs];\n    const workItems = [...this.state.workItems];\n    let maxid = 0;\n    workItems.map(function(workItem){     \n      if (parseInt(workItem.id) > maxid) maxid = workItem.id;    \n    });\n    maxid = maxid + 1;\n    const arrivingTime = timeInputs[0].hours + \":\" + timeInputs[0].minutes;\n    const leavingTime = timeInputs[1].hours + \":\" + timeInputs[1].minutes;\n    const lunchBreakStarting = timeInputs[2].hours + \":\" + timeInputs[2].minutes;\n    const lunchBreakFinishing = timeInputs[3].hours + \":\" + timeInputs[3].minutes;\n    const totalWorkedHours = this.getHoursDifference(timeInputs[0], timeInputs[1]);\n    const totalWorkedMinutes = this.getMinutesDifference(timeInputs[0], timeInputs[1]);\n    const totalLunchBreakHours = this.getHoursDifference(timeInputs[2], timeInputs[3]);\n    const totalLunchBreakMinutes = this.getMinutesDifference(timeInputs[2], timeInputs[3]);\n    const totalWorked = totalWorkedHours + \" hours \" + totalWorkedMinutes + \" minutes\";\n    const totalLunchBreak = totalLunchBreakHours + \" hours \" + totalLunchBreakMinutes + \" minutes\";\n    workItems.push({id: maxid, date: selectedDate, workedFrom: arrivingTime, workedTo: leavingTime, totalWorkedHours: totalWorkedHours, totalWorkedMinutes: totalWorkedMinutes, lunchBreakFrom: lunchBreakStarting, lunchBreakTo: lunchBreakFinishing, totalLunchBreakHours: totalLunchBreakHours, totalLunchBreakMinutes: totalLunchBreakMinutes, totalWorked: totalWorked, totalLunchBreak: totalLunchBreak});\n    this.setState({workItems: workItems});\n    const workedHoursArray = workItems.map(function(workItem) {return workItem.totalWorkedHours;});\n    const workedMinutesArray = workItems.map(function(workItem) {return workItem.totalWorkedMinutes;});\n    const totalCardsWorked = this.getTotalTime(workedHoursArray, workedMinutesArray);\n    const lunchBreakHours = workItems.map(function(workItem) {return workItem.totalLunchBreakHours;});\n    const lunchBreakMinutes = workItems.map(function(workItem) {return workItem.totalLunchBreakMinutes;});\n    const totalCardsLunchBreak = this.getTotalTime(lunchBreakHours, lunchBreakMinutes);\n    const totalCards = [...this.state.totalCards];\n    totalCards[0].value = totalCardsWorked;\n    totalCards[1].value = workItems.length;\n    totalCards[2].value = totalCardsLunchBreak;\n    this.setState({totalCards:totalCards});\n    this.db.ref(\"workitems\").push({id: maxid, date: selectedDate, workedFrom: arrivingTime, workedTo: leavingTime, totalWorkedHours: totalWorkedHours, totalWorkedMinutes: totalWorkedMinutes, lunchBreakFrom: lunchBreakStarting, lunchBreakTo: lunchBreakFinishing, totalLunchBreakHours: totalLunchBreakHours, totalLunchBreakMinutes: totalLunchBreakMinutes, totalWorked: totalWorked, totalLunchBreak: totalLunchBreak});\n  }\n\n  getTotalTime = (hoursArray, minutesArray) =>{\n    let totalHours = hoursArray.reduce((a, b) => a + b, 0);\n    let totalMinutes = minutesArray.reduce((a, b) => a + b, 0);\n    var hours = (totalMinutes / 60);\n    var rhours = Math.floor(totalMinutes / 60);\n    totalHours = totalHours + rhours;\n    var minutes = (hours - rhours) * 60;\n    var rMinutes = Math.round(minutes);\n    return totalHours + \"hours \" + rMinutes + \"minutes\";\n  }\n\n  getHoursDifference = (timeInput1, timeInput2) =>{\n    let firstTime = new Date(2000, 0, 1, timeInput1.hours, timeInput1.minutes, 0);\n    let secondTIme = new Date(2000, 0, 1, timeInput2.hours, timeInput2.minutes,0);\n    if(secondTIme<firstTime){\n      secondTIme.setDate(secondTIme.getDate() + 1);\n    }\n    var diff = secondTIme - firstTime;\n    var msec = diff;\n    var hh = Math.floor(msec / 1000 / 60 / 60);\n    return hh;\n  }\n\n  getMinutesDifference = (timeInput1, timeInput2) =>{\n    let firstTime = new Date(2000, 0, 1, timeInput1.hours, timeInput1.minutes, 0);\n    let secondTIme = new Date(2000, 0, 1, timeInput2.hours, timeInput2.minutes,0);\n    if(secondTIme<firstTime){\n      secondTIme.setDate(secondTIme.getDate() + 1);\n    }\n    var diff = secondTIme - firstTime;\n    var msec = diff;\n    var hh = Math.floor(msec / 1000 / 60 / 60);\n    msec -= hh * 1000 * 60 * 60;\n    var mm = Math.floor(msec / 1000 / 60);\n    return mm;\n  }\n\n  timeInputChangeHandler = (event, id) =>{\n    const timeInputs = [...this.state.timeInputs];\n    const particularInputIndex = timeInputs.findIndex(t => {\n      return t.id === id;\n    })\n    const input = event.target.value;\n    console.log(event.target.className);\n    if(event.target.className.includes(\"hours\")){\n      timeInputs[particularInputIndex].hours = input;\n    }\n    if(event.target.className.includes(\"minutes\")){\n      timeInputs[particularInputIndex].minutes = input;\n    }\n\n    this.setState({timeInputs: timeInputs})\n  }\n\n  render(){\n\n    const style = {\n      backgroundColor: 'white',\n      font: 'inherit',\n      border: '1px solid blue',\n      padding: '8px',\n      cursor: 'pointer'\n    };\n\n    let persons = null;\n\n    if(this.state.showPersons){\n      persons = (\n        <div>\n        {this.state.persons.map((person,index) => {\n          return <Person \n          click={this.deletePersonHandler.bind(this, index)}\n          name={person.name}\n          age={person.age}\n          key={person.id}\n          changed={(event) => this.nameChangedHandler(event, person.id)}/> \n        })}\n      </div>)\n    }\n\n    let timeInputs = (\n      <div>\n        {\n          this.state.timeInputs.map((input, index) => {\n            return <TimeInput \n              key={input.id}\n              name={input.name}\n              changed={(event) => this.timeInputChangeHandler(event, input.id)}/>\n          })\n        }\n      </div>\n    )\n\n    let cardsTotal = (\n      <div>\n        {\n          this.state.totalCards.map((card, index) => {\n            return <Total \n              key={card.id}\n              heading={card.heading}\n              value={card.value}\n              color={card.color}/>\n          })\n        }\n      </div>\n    )\n    console.log(this.state.workItems);\n\n    let workItems = (\n      <div>\n      {\n        this.state.workItems.map((item, index) => {\n          return <WorkItem\n            key={item.id}\n            date={item.date}\n            workedFrom={item.workedFrom}\n            workedTo={item.workedTo}\n            totalWorked={item.totalWorked}\n            lunchBreakFrom={item.lunchBreakFrom}\n            lunchBreakTo={item.lunchBreakTo}\n            totalLunchBreak={item.totalLunchBreak}\n            />\n        })\n      }\n    </div>\n    )\n\n    console.log(this.state.workItems);\n\n    let datePicker = (\n      <div>\n         <DatePicker selected={this.state.date}\n                    onChange={date => this.dateChangedHandler(date)} />\n      </div>\n    )\n\n    return (\n      <div className=\"App\">\n        <h1>Title</h1>\n        <p>working p</p>\n        <button\n          style={style}\n          onClick={this.togglePersonsHandler}>Hide/unhide</button>\n        {persons}\n        <div className=\"header-img\">\n        <div className=\"datepicker-container-outer\">\n          <div className=\"datepicker-container\">\n            {datePicker}\n          </div>\n        </div>\n        <div className=\"input-container-outer\">\n          <div className=\"input-container\">\n            {timeInputs}\n            <button class=\"inputs-submit\" onClick={(event) => this.submitHandler()}>Submit work</button>\n          </div>\n        </div>\n        <div className=\"total-container-outer\">\n          <div className=\"total-container\">{cardsTotal}</div></div>\n        </div>\n        <div className=\"work-items-container-outer\">\n          <div className=\"work-items-container\">\n            {workItems}\n          </div>\n        </div>\n      </div>\n      );\n    }\n  }\n  export default App;\n"]},"metadata":{},"sourceType":"module"}