{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ian\\\\Documents\\\\create-react-app\\\\my-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport './TimeInputs/timeinputs.css';\nimport './Total/total.css';\nimport './WorkItem/workitem.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './Header/header.css';\nimport TimeInput from './TimeInputs/timesinputs';\nimport Total from './Total/total';\nimport WorkItem from './WorkItem/workitem';\nimport DatePicker from \"react-datepicker\";\nimport Firebase from './Firebase';\nimport Header from './Header/header';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.date = new Date();\n\n    this.dateChangedHandler = newDate => {\n      this.setState({\n        date: newDate\n      });\n    };\n\n    this.togglePersonsHandler = () => {\n      const doesShow = this.state.showPersons;\n      this.setState({\n        showPersons: true\n      });\n    };\n\n    this.submitHandler = () => {\n      const d = this.state.date;\n      const dd = String(d.getDate()).padStart(2, '0');\n      const mm = String(d.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n      const yyyy = d.getFullYear();\n      const selectedDate = dd + \".\" + mm + \".\" + yyyy;\n      const timeInputs = [...this.state.timeInputs];\n      let workItems = [...this.state.workItems];\n      console.log(workItems);\n      let maxid = 0;\n      workItems.map(function (workItem) {\n        if (parseInt(workItem.id) > maxid) maxid = workItem.id;\n      });\n      maxid = maxid + 1;\n      const arrivingTime = timeInputs[0].hours + \":\" + timeInputs[0].minutes;\n      const leavingTime = timeInputs[1].hours + \":\" + timeInputs[1].minutes;\n      const lunchBreakStarting = timeInputs[2].hours + \":\" + timeInputs[2].minutes;\n      const lunchBreakFinishing = timeInputs[3].hours + \":\" + timeInputs[3].minutes;\n      const totalWorkedHours = this.getHoursDifference(timeInputs[0], timeInputs[1]);\n      const totalWorkedMinutes = this.getMinutesDifference(timeInputs[0], timeInputs[1]);\n      const totalLunchBreakHours = this.getHoursDifference(timeInputs[2], timeInputs[3]);\n      const totalLunchBreakMinutes = this.getMinutesDifference(timeInputs[2], timeInputs[3]);\n      const totalWorked = totalWorkedHours + \" hr \" + totalWorkedMinutes + \" min\";\n      const totalLunchBreak = totalLunchBreakHours + \" hr \" + totalLunchBreakMinutes + \" min\";\n      workItems.push({\n        id: maxid,\n        date: selectedDate,\n        workedFrom: arrivingTime,\n        workedTo: leavingTime,\n        totalWorkedHours: totalWorkedHours,\n        totalWorkedMinutes: totalWorkedMinutes,\n        lunchBreakFrom: lunchBreakStarting,\n        lunchBreakTo: lunchBreakFinishing,\n        totalLunchBreakHours: totalLunchBreakHours,\n        totalLunchBreakMinutes: totalLunchBreakMinutes,\n        totalWorked: totalWorked,\n        totalLunchBreak: totalLunchBreak\n      });\n      this.setState({\n        workItems: workItems\n      });\n      console.log(workItems);\n      console.log(this.state.workItems);\n      this.updateCardsState(workItems);\n      this.db.ref(\"workitems\").child(maxid).set({\n        id: maxid,\n        date: selectedDate,\n        workedFrom: arrivingTime,\n        workedTo: leavingTime,\n        totalWorkedHours: totalWorkedHours,\n        totalWorkedMinutes: totalWorkedMinutes,\n        lunchBreakFrom: lunchBreakStarting,\n        lunchBreakTo: lunchBreakFinishing,\n        totalLunchBreakHours: totalLunchBreakHours,\n        totalLunchBreakMinutes: totalLunchBreakMinutes,\n        totalWorked: totalWorked,\n        totalLunchBreak: totalLunchBreak\n      });\n    };\n\n    this.updateCardsState = workItems => {\n      console.log(workItems);\n      const workedHoursArray = workItems.map(function (workItem) {\n        return workItem.totalWorkedHours;\n      });\n      const workedMinutesArray = workItems.map(function (workItem) {\n        return workItem.totalWorkedMinutes;\n      });\n      const totalCardsWorked = this.getTotalTime(workedHoursArray, workedMinutesArray);\n      const lunchBreakHours = workItems.map(function (workItem) {\n        return workItem.totalLunchBreakHours;\n      });\n      const lunchBreakMinutes = workItems.map(function (workItem) {\n        return workItem.totalLunchBreakMinutes;\n      });\n      const totalCardsLunchBreak = this.getTotalTime(lunchBreakHours, lunchBreakMinutes);\n      let totalCards = [...this.state.totalCards];\n      totalCards[0].value = totalCardsWorked;\n      totalCards[1].value = workItems.length;\n      totalCards[2].value = totalCardsLunchBreak;\n      this.setState({\n        totalCards: totalCards\n      });\n    };\n\n    this.getTotalTime = (hoursArray, minutesArray) => {\n      let totalHours = hoursArray.reduce((a, b) => a + b, 0);\n      let totalMinutes = minutesArray.reduce((a, b) => a + b, 0);\n      var hours = totalMinutes / 60;\n      var rhours = Math.floor(totalMinutes / 60);\n      totalHours = totalHours + rhours;\n      var minutes = (hours - rhours) * 60;\n      var rMinutes = Math.round(minutes);\n      return totalHours + \"hr \" + rMinutes + \"min\";\n    };\n\n    this.getHoursDifference = (timeInput1, timeInput2) => {\n      let firstTime = new Date(2000, 0, 1, timeInput1.hours, timeInput1.minutes, 0);\n      let secondTIme = new Date(2000, 0, 1, timeInput2.hours, timeInput2.minutes, 0);\n\n      if (secondTIme < firstTime) {\n        secondTIme.setDate(secondTIme.getDate() + 1);\n      }\n\n      var diff = secondTIme - firstTime;\n      var msec = diff;\n      var hh = Math.floor(msec / 1000 / 60 / 60);\n      return hh;\n    };\n\n    this.getMinutesDifference = (timeInput1, timeInput2) => {\n      let firstTime = new Date(2000, 0, 1, timeInput1.hours, timeInput1.minutes, 0);\n      let secondTIme = new Date(2000, 0, 1, timeInput2.hours, timeInput2.minutes, 0);\n\n      if (secondTIme < firstTime) {\n        secondTIme.setDate(secondTIme.getDate() + 1);\n      }\n\n      var diff = secondTIme - firstTime;\n      var msec = diff;\n      var hh = Math.floor(msec / 1000 / 60 / 60);\n      msec -= hh * 1000 * 60 * 60;\n      var mm = Math.floor(msec / 1000 / 60);\n      return mm;\n    };\n\n    this.timeInputChangeHandler = (event, id) => {\n      const timeInputs = [...this.state.timeInputs];\n      const particularInputIndex = timeInputs.findIndex(t => {\n        return t.id === id;\n      });\n      const input = event.target.value;\n\n      if (event.target.className.includes(\"hours\")) {\n        timeInputs[particularInputIndex].hours = input;\n      }\n\n      if (event.target.className.includes(\"minutes\")) {\n        timeInputs[particularInputIndex].minutes = input;\n      }\n\n      this.setState({\n        timeInputs: timeInputs\n      });\n    };\n\n    this.deleteItemHandler = (event, id) => {\n      let workItems = [...this.state.workItems];\n      const workItemIndex = this.state.workItems.findIndex(w => {\n        return w.id === id;\n      });\n      workItems.splice(workItemIndex, 1);\n      this.setState({\n        workItems: workItems\n      });\n      this.db.ref('workitems').child(id).remove();\n      this.updateCardsState(workItems);\n    };\n\n    this.db = Firebase.database();\n    this.try = [];\n    this.state = {\n      timeInputs: [{\n        id: '1',\n        name: 'Starting time',\n        hours: '00',\n        minutes: '00'\n      }, {\n        id: '2',\n        name: 'Finishing time',\n        hours: '00',\n        minutes: '00'\n      }, {\n        id: '3',\n        name: 'Starting lunch break',\n        hours: '00',\n        minutes: '00'\n      }, {\n        id: '4',\n        name: 'Finishing lunch break',\n        hours: '00',\n        minutes: '00'\n      }],\n      totalCards: [{\n        id: '1',\n        heading: 'Total worked:',\n        color: '#85aded',\n        value: '0 hr 0 min'\n      }, {\n        id: '2',\n        heading: 'Number of workdays:',\n        color: '#b00538',\n        value: '0'\n      }, {\n        id: '3',\n        heading: 'Total lunchbreaks: ',\n        color: '#b3b00e',\n        value: '0 hr 0 min'\n      }],\n      workItems: [],\n      date: this.date\n    };\n  }\n\n  componentDidMount() {\n    let workItems = [...this.state.workItems];\n    const workItemsRef = this.db.ref(\"workitems\");\n    workItemsRef.once('value', snap => {\n      snap.forEach(child => {\n        workItems.push(child.val());\n      });\n      this.setState({\n        workItems: workItems\n      });\n      this.updateCardsState(workItems);\n    });\n  }\n\n  render() {\n    const style = {\n      backgroundColor: 'white',\n      font: 'inherit',\n      border: '1px solid blue',\n      padding: '8px',\n      cursor: 'pointer'\n    };\n    let timeInputs = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 7\n      }\n    }, this.state.timeInputs.map((input, index) => {\n      return /*#__PURE__*/React.createElement(TimeInput, {\n        key: input.id,\n        name: input.name,\n        changed: event => this.timeInputChangeHandler(event, input.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 20\n        }\n      });\n    }));\n    let cardsTotal = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 7\n      }\n    }, this.state.totalCards.map((card, index) => {\n      return /*#__PURE__*/React.createElement(Total, {\n        key: card.id,\n        heading: card.heading,\n        value: card.value,\n        color: card.color,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 20\n        }\n      });\n    }));\n    let workItems = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 7\n      }\n    }, this.state.workItems.map((item, index) => {\n      return /*#__PURE__*/React.createElement(WorkItem, {\n        key: item.id,\n        date: item.date,\n        workedFrom: item.workedFrom,\n        workedTo: item.workedTo,\n        totalWorked: item.totalWorked,\n        lunchBreakFrom: item.lunchBreakFrom,\n        lunchBreakTo: item.lunchBreakTo,\n        totalLunchBreak: item.totalLunchBreak,\n        click: event => this.deleteItemHandler(event, item.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 18\n        }\n      });\n    }));\n    let datePicker = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      selected: this.state.date,\n      onChange: date => this.dateChangedHandler(date),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 10\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"datepicker-container-outer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"datepicker-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }\n    }, datePicker)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-container-outer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }\n    }, timeInputs, /*#__PURE__*/React.createElement(\"button\", {\n      class: \"inputs-submit\",\n      onClick: event => this.submitHandler(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 13\n      }\n    }, \"Submit work\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"total-container-outer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"total-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }\n    }, cardsTotal))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"work-items-container-outer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"work-items-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }\n    }, workItems)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Ian/Documents/create-react-app/my-app/src/App.js"],"names":["React","Component","TimeInput","Total","WorkItem","DatePicker","Firebase","Header","App","constructor","props","date","Date","dateChangedHandler","newDate","setState","togglePersonsHandler","doesShow","state","showPersons","submitHandler","d","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","selectedDate","timeInputs","workItems","console","log","maxid","map","workItem","parseInt","id","arrivingTime","hours","minutes","leavingTime","lunchBreakStarting","lunchBreakFinishing","totalWorkedHours","getHoursDifference","totalWorkedMinutes","getMinutesDifference","totalLunchBreakHours","totalLunchBreakMinutes","totalWorked","totalLunchBreak","push","workedFrom","workedTo","lunchBreakFrom","lunchBreakTo","updateCardsState","db","ref","child","set","workedHoursArray","workedMinutesArray","totalCardsWorked","getTotalTime","lunchBreakHours","lunchBreakMinutes","totalCardsLunchBreak","totalCards","value","length","hoursArray","minutesArray","totalHours","reduce","a","b","totalMinutes","rhours","Math","floor","rMinutes","round","timeInput1","timeInput2","firstTime","secondTIme","setDate","diff","msec","hh","timeInputChangeHandler","event","particularInputIndex","findIndex","t","input","target","className","includes","deleteItemHandler","workItemIndex","w","splice","remove","database","try","name","heading","color","componentDidMount","workItemsRef","once","snap","forEach","val","render","style","backgroundColor","font","border","padding","cursor","index","cardsTotal","card","item","datePicker"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport './TimeInputs/timeinputs.css';\nimport './Total/total.css';\nimport './WorkItem/workitem.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './Header/header.css';\nimport TimeInput from './TimeInputs/timesinputs';\nimport Total from './Total/total';\nimport WorkItem from './WorkItem/workitem';\nimport DatePicker from \"react-datepicker\";\nimport Firebase from './Firebase';\nimport Header from './Header/header';\n\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.db = Firebase.database();\n    this.try = [];\n    this.state = {\n    timeInputs: [\n      { id: '1', name: 'Starting time', hours:'00', minutes:'00' },\n      { id: '2', name: 'Finishing time',hours:'00', minutes:'00' },\n      { id: '3', name: 'Starting lunch break', hours:'00', minutes:'00' },\n      { id: '4', name: 'Finishing lunch break', hours:'00', minutes:'00' }\n    ],\n    totalCards: [\n      {id: '1', heading: 'Total worked:', color: '#85aded', value: '0 hr 0 min'},\n      {id: '2', heading: 'Number of workdays:', color: '#b00538', value: '0'},\n      {id: '3', heading: 'Total lunchbreaks: ', color: '#b3b00e', value: '0 hr 0 min'}\n    ],\n    workItems: [],\n    date: this.date\n  }\n  }\n  date = new Date();\n\ncomponentDidMount(){\n  let workItems = [...this.state.workItems];\n    const workItemsRef = this.db.ref(\"workitems\");\n    workItemsRef.once('value', snap =>{\n      snap.forEach(child =>{\n        workItems.push(child.val());\n      })\n      this.setState({workItems: workItems});\n      this.updateCardsState(workItems);\n    });\n  }\n\n  dateChangedHandler = (newDate) =>{\n    this.setState({date: newDate});\n  }\n\n  togglePersonsHandler = () =>{\n    const doesShow = this.state.showPersons;\n    this.setState({showPersons: true});\n  }\n\n  submitHandler = () =>{\n    const d = this.state.date;\n    const dd = String(d.getDate()).padStart(2, '0');\n    const mm = String(d.getMonth() + 1).padStart(2, '0'); //January is 0!\n    const yyyy = d.getFullYear();\n    const selectedDate = dd + \".\" + mm + \".\" + yyyy;\n    const timeInputs = [...this.state.timeInputs];\n    let workItems = [...this.state.workItems];\n    console.log(workItems);\n    let maxid = 0;\n    workItems.map(function(workItem){     \n      if (parseInt(workItem.id) > maxid) maxid = workItem.id;    \n    });\n    maxid = maxid + 1;\n    const arrivingTime = timeInputs[0].hours + \":\" + timeInputs[0].minutes;\n    const leavingTime = timeInputs[1].hours + \":\" + timeInputs[1].minutes;\n    const lunchBreakStarting = timeInputs[2].hours + \":\" + timeInputs[2].minutes;\n    const lunchBreakFinishing = timeInputs[3].hours + \":\" + timeInputs[3].minutes;\n    const totalWorkedHours = this.getHoursDifference(timeInputs[0], timeInputs[1]);\n    const totalWorkedMinutes = this.getMinutesDifference(timeInputs[0], timeInputs[1]);\n    const totalLunchBreakHours = this.getHoursDifference(timeInputs[2], timeInputs[3]);\n    const totalLunchBreakMinutes = this.getMinutesDifference(timeInputs[2], timeInputs[3]);\n    const totalWorked = totalWorkedHours + \" hr \" + totalWorkedMinutes + \" min\";\n    const totalLunchBreak = totalLunchBreakHours + \" hr \" + totalLunchBreakMinutes + \" min\";\n    workItems.push({id: maxid, date: selectedDate, workedFrom: arrivingTime, workedTo: leavingTime, totalWorkedHours: totalWorkedHours, totalWorkedMinutes: totalWorkedMinutes, lunchBreakFrom: lunchBreakStarting, lunchBreakTo: lunchBreakFinishing, totalLunchBreakHours: totalLunchBreakHours, totalLunchBreakMinutes: totalLunchBreakMinutes, totalWorked: totalWorked, totalLunchBreak: totalLunchBreak});\n    this.setState({workItems: workItems});\n    console.log(workItems);\n    console.log(this.state.workItems);\n    this.updateCardsState(workItems);\n    this.db.ref(\"workitems\").child(maxid).set({id: maxid, date: selectedDate, workedFrom: arrivingTime, workedTo: leavingTime, totalWorkedHours: totalWorkedHours, totalWorkedMinutes: totalWorkedMinutes, lunchBreakFrom: lunchBreakStarting, lunchBreakTo: lunchBreakFinishing, totalLunchBreakHours: totalLunchBreakHours, totalLunchBreakMinutes: totalLunchBreakMinutes, totalWorked: totalWorked, totalLunchBreak: totalLunchBreak});\n  }\n\n  updateCardsState = (workItems) =>{\n    console.log(workItems);\n    const workedHoursArray = workItems.map(function(workItem) {return workItem.totalWorkedHours;});\n    const workedMinutesArray = workItems.map(function(workItem) {return workItem.totalWorkedMinutes;});\n    const totalCardsWorked = this.getTotalTime(workedHoursArray, workedMinutesArray);\n    const lunchBreakHours = workItems.map(function(workItem) {return workItem.totalLunchBreakHours;});\n    const lunchBreakMinutes = workItems.map(function(workItem) {return workItem.totalLunchBreakMinutes;});\n    const totalCardsLunchBreak = this.getTotalTime(lunchBreakHours, lunchBreakMinutes);\n    let totalCards = [...this.state.totalCards];\n    totalCards[0].value = totalCardsWorked;\n    totalCards[1].value = workItems.length;\n    totalCards[2].value = totalCardsLunchBreak;\n    this.setState({totalCards:totalCards});\n  }\n\n  getTotalTime = (hoursArray, minutesArray) =>{\n    let totalHours = hoursArray.reduce((a, b) => a + b, 0);\n    let totalMinutes = minutesArray.reduce((a, b) => a + b, 0);\n    var hours = (totalMinutes / 60);\n    var rhours = Math.floor(totalMinutes / 60);\n    totalHours = totalHours + rhours;\n    var minutes = (hours - rhours) * 60;\n    var rMinutes = Math.round(minutes);\n    return totalHours + \"hr \" + rMinutes + \"min\";\n  }\n\n  getHoursDifference = (timeInput1, timeInput2) =>{\n    let firstTime = new Date(2000, 0, 1, timeInput1.hours, timeInput1.minutes, 0);\n    let secondTIme = new Date(2000, 0, 1, timeInput2.hours, timeInput2.minutes,0);\n    if(secondTIme<firstTime){\n      secondTIme.setDate(secondTIme.getDate() + 1);\n    }\n    var diff = secondTIme - firstTime;\n    var msec = diff;\n    var hh = Math.floor(msec / 1000 / 60 / 60);\n    return hh;\n  }\n\n  getMinutesDifference = (timeInput1, timeInput2) =>{\n    let firstTime = new Date(2000, 0, 1, timeInput1.hours, timeInput1.minutes, 0);\n    let secondTIme = new Date(2000, 0, 1, timeInput2.hours, timeInput2.minutes,0);\n    if(secondTIme<firstTime){\n      secondTIme.setDate(secondTIme.getDate() + 1);\n    }\n    var diff = secondTIme - firstTime;\n    var msec = diff;\n    var hh = Math.floor(msec / 1000 / 60 / 60);\n    msec -= hh * 1000 * 60 * 60;\n    var mm = Math.floor(msec / 1000 / 60);\n    return mm;\n  }\n\n  timeInputChangeHandler = (event, id) =>{\n    const timeInputs = [...this.state.timeInputs];\n    const particularInputIndex = timeInputs.findIndex(t => {\n      return t.id === id;\n    })\n    const input = event.target.value;\n    if(event.target.className.includes(\"hours\")){\n      timeInputs[particularInputIndex].hours = input;\n    }\n    if(event.target.className.includes(\"minutes\")){\n      timeInputs[particularInputIndex].minutes = input;\n    }\n\n    this.setState({timeInputs: timeInputs})\n  }\n\n  deleteItemHandler = (event, id) =>{\n    let workItems = [...this.state.workItems];\n    const workItemIndex = this.state.workItems.findIndex(w => {\n      return w.id === id;\n    });\n    workItems.splice(workItemIndex, 1);\n    this.setState({workItems: workItems});\n    this.db.ref('workitems').child(id).remove();\n    this.updateCardsState(workItems);\n  }\n\n  render(){\n\n    const style = {\n      backgroundColor: 'white',\n      font: 'inherit',\n      border: '1px solid blue',\n      padding: '8px',\n      cursor: 'pointer'\n    };\n\n    let timeInputs = (\n      <div>\n        {\n          this.state.timeInputs.map((input, index) => {\n            return <TimeInput \n              key={input.id}\n              name={input.name}\n              changed={(event) => this.timeInputChangeHandler(event, input.id)}/>\n          })\n        }\n      </div>\n    )\n\n    let cardsTotal = (\n      <div>\n        {\n          this.state.totalCards.map((card, index) => {\n            return <Total \n              key={card.id}\n              heading={card.heading}\n              value={card.value}\n              color={card.color}/>\n          })\n        }\n      </div>\n    )\n\n    let workItems = (\n      <div>\n      {\n        this.state.workItems.map((item, index) => {\n          return <WorkItem\n            key={item.id}\n            date={item.date}\n            workedFrom={item.workedFrom}\n            workedTo={item.workedTo}\n            totalWorked={item.totalWorked}\n            lunchBreakFrom={item.lunchBreakFrom}\n            lunchBreakTo={item.lunchBreakTo}\n            totalLunchBreak={item.totalLunchBreak}\n            click={(event) => this.deleteItemHandler(event, item.id)}\n            />\n        })\n      }\n    </div>\n    )\n\n    let datePicker = (\n      <div>\n         <DatePicker selected={this.state.date}\n                    onChange={date => this.dateChangedHandler(date)} />\n      </div>\n    )\n\n    return (\n      <div className=\"App\">\n        <Header/>\n        <div className=\"header-img\">\n        <div className=\"datepicker-container-outer\">\n          <div className=\"datepicker-container\">\n            {datePicker}\n          </div>\n        </div>\n        <div className=\"input-container-outer\">\n          <div className=\"input-container\">\n            {timeInputs}\n            <button class=\"inputs-submit\" onClick={(event) => this.submitHandler()}>Submit work</button>\n          </div>\n        </div>\n        <div className=\"total-container-outer\">\n          <div className=\"total-container\">{cardsTotal}</div></div>\n        </div>\n        <div className=\"work-items-container-outer\">\n          <div className=\"work-items-container\">\n            {workItems}\n          </div>\n        </div>\n      </div>\n      );\n    }\n  }\n  export default App;\n"]},"metadata":{},"sourceType":"module"}